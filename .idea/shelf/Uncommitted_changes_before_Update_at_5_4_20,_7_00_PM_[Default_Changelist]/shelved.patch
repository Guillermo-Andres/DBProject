Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, jsonify, request , redirect , url_for\nfrom handler.babyFood import babyFoodHandler\nfrom handler.medication import MedicationHandler\nfrom handler.batteries import BatteryHandler\nfrom handler.clothing import ClothingHandler\nfrom handler.heavyequipment import HeavyEquipmentHandler\nfrom handler.ice import IceHandler\nfrom handler.powertools import PowerToolsHandler\nfrom handler.fuel import FuelHandler\nfrom handler.admin import AdminHandler\nfrom handler.supplier import SupplierHandler\nfrom handler.company import CompanyHandler\nfrom handler.consumer import ConsumerHandler\nfrom handler.contains import ContainsHandler\nfrom handler.medicalDevices import MedicalDevicesHandler\nfrom handler.powerGenerator import PowerGeneratorHandler\nfrom handler.hygiene import HygieneHandler\nfrom handler.order import OrderHandler\nfrom handler.payment_method import PaymentMethodHandler\nfrom handler.paysFor import PaysForHandler\nfrom handler.placesAnOrder import PlacesAnOrderHandler\nfrom handler.supplier import SupplierHandler\nfrom handler.supplies import suppliesHandler\nfrom handler.worksFor import WorksForHandler\nfrom handler.ResourceHandler import ResourceHandler\nfrom handler.water import WaterHandler\nfrom handler.request import RequestHandler\nfrom flask_cors import CORS, cross_origin\n\n# Activate\napp = Flask(__name__)\n# Apply CORS to this app\nCORS(app)\n\n@app.route('/')\ndef sendtToLogin():\n    return redirect(url_for('registerConsumer'))\n\n\n#Register user route Unused for phase 2\n@app.route('/almacenespr/register/consumer', methods = ['POST','GET'])\ndef registerConsumer():\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n    if request.method == 'GET':\n        return ConsumerHandler().getAllConsumers()\n\n    elif request.method == 'POST':\n        return ConsumerHandler().insert(request.get_json())\n\n#Get consumer by ID\n@app.route('/almacenespr/consumer/<int:consumer_id>', methods = ['GET'])\ndef getConsumerbyId(consumer_id):\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n    if request.method == 'GET':\n        return ConsumerHandler().getConsumerById(consumer_id)\n\n#view all consumers\n@app.route('/almacenespr/consumer', methods = ['GET'])\ndef getAllconsumer():\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n    if request.method == 'GET':\n        return ConsumerHandler().getAllConsumers()\n\n\n@app.route('/almacenespr/register/admin', methods = ['POST','GET'])\ndef registerAdmin():\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n    arg = request.get_json()\n    if request.method == 'GET':\n        return AdminHandler().getAllAdmins()\n\n    elif request.method == 'POST':\n        return AdminHandler().insert(request.get_json())\n\n@app.route('/almacenespr/admin', methods = ['POST','GET'])\ndef getAllAdmin():\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n    arg = request.get_json()\n\n    if request.method == 'GET':\n        return AdminHandler().getAllAdmins()\n\n    elif request.method == 'POST':\n        return AdminHandler().insert(request.get_json())\n\n#search admin by id\n@app.route('/almacenespr/admin/<int:admin_id>', methods = ['GET'])\ndef getAdminById(admin_id):\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n    arg = request.get_json()\n\n    if request.method == 'GET':\n        return AdminHandler().getAdminByID(admin_id)\n\n\n@app.route('/almacenespr/supplier', methods = ['POST','GET'])\ndef registerSupplier():\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n\n    if request.method == 'GET':\n        return SupplierHandler().getAllSuppliers()\n\n    elif request.method == 'POST':\n        return SupplierHandler().insert(request.get_json())\n\n#get supplier by id\n@app.route('/almacenespr/supplier/<int:supplier_id>', methods = ['GET'])\ndef getSupplierById(supplier_id):\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n    if request.method == 'GET':\n        return SupplierHandler().getSupplierById(supplier_id)\n\n#get all suppliers\n@app.route('/almacenespr/supplier', methods = ['GET'])\ndef getAllSuppliers():\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n\n    if request.method == 'GET':\n        return SupplierHandler().getAllSuppliers()\n\n\n\n@app.route('/almacenespr/consumer/<int:consumer_id>/orders', methods = ['GET','POST','PUT'])\ndef orderResources(consumer_id):\n    #orders specify if we are requesting, reserving or purchasing depending on its status\n\n    if request.method == 'GET':\n        return OrderHandler().geOrdersByConsumerID(consumer_id)\n\n    elif request.method == 'POST':\n        #TODO aqui en el futuero hay que llamar varios inserts (orden , contains  , etc...)\n        return OrderHandler().insert(request.get_json())\n\n    elif request.method == 'PUT':\n        return OrderHandler().update(request.get_json())\n\n@app.route('/almacenespr/supplier/<int:sid>/newresource', methods = ['POST','PUT','GET'])\ndef newResource(sid):\n    #TODO otros resources aqui es donde seria bueno tener un \"ResourceHandler\" que se encarge de la logica internamente\n\n    if request.method == 'GET':\n        return babyFoodHandler().getAllFood()\n\n    elif request.method == 'POST':\n        return babyFoodHandler().insert(request.get_json())\n\n    elif request.method == 'PUT':\n        return babyFoodHandler().update(request.get_json())\n\n@app.route('/almacenespr/requested', methods = ['GET'])\ndef viewRequested():\n    return RequestHandler().getAllRequestsAll()\n\n@app.route('/almacenespr/requested/<string:keyword>', methods = ['GET'])\ndef viewRequestedByKeyword(keyword):\n    return RequestHandler().getAllRequestByKeyword(keyword)\n\n@app.route('/almacenespr/available', methods = ['GET'])\ndef viewAvailable():\n    return ResourceHandler().getAllResources()\n\n@app.route('/almacenespr/instock', methods = ['GET'])\ndef viewInStock():\n    return ResourceHandler().getResourcesInStock()\n\n# @app.route('/almacenespr/requested/<string:resource_type>', methods = ['GET'])\n# def searchRequested(resource_type,search_keyword):\n#\n#     return RequestHandler().getAllByType(resource_type)\n\n@app.route('/almacenespr/requested/<int:request_id>', methods = ['GET'])\ndef searchRequestedById(request_id):\n\n    return RequestHandler().getRequestById(request_id)\n\n@app.route('/almacenespr/resource/<int:resource_id>', methods = ['GET'])\ndef getResourcesbyId(resource_id):\n    return ResourceHandler().getResourceById(resource_id)\n\n\n\n@app.route('/almacenespr/resource/<string:resource_type>/<int:resource_type_id>', methods = ['GET'])\ndef getResourcesbyTypeId(resource_type, resource_type_id):\n    if resource_type == 'fuel':\n        return FuelHandler().getFuelById(resource_type_id)\n    if resource_type == 'ice':\n        return IceHandler().getIceById(resource_type_id)\n    if resource_type == 'clothing':\n        return ClothingHandler().getClothesgById(resource_type_id)\n    if resource_type == 'battery':\n        return BatteryHandler().getBatteryById(resource_type_id)\n    if resource_type == 'babyfood':\n        return babyFoodHandler().getbabyFoodById(resource_type_id)\n    if resource_type == 'cannedfood':\n        return cannedFoodHandler().getcannedFoodById(resource_type_id)\n    if resource_type == 'dryfood':\n        return dryFoodHandler().getdryFoodById(resource_type_id)\n    if resource_type == 'heavyequipment':\n        return HeavyEquipmentHandler().getHeavyEquimentById(resource_type_id)\n    if resource_type == 'medication':\n        return MedicationHandler().getMedicationById(resource_type_id)\n    if resource_type == 'tools':\n        return PowerToolsHandler().getToolById(resource_type_id)\n    if resource_type == 'water':\n        return WaterHandler().getWaterById(resource_type_id)\n    else:\n        return ResourceHandler().getAllByType(resource_type)\n\n@app.route('/almacenespr/resource/<string:resource_type>/', methods = ['GET'])\ndef getResources(resource_type):\n    return ResourceHandler().getAllByType(resource_type)\n\n\n@app.route('/almacenespr/available/<string:resource_type>/<string:search_keyword>', methods = ['GET'])\ndef searchAvailable(resource_type,search_keyword):\n    return ResourceHandler().getAllByType(resource_type)\n\n@app.route('/almacenespr/dashboard/statistics/daily/<int:type>', methods = ['GET'])\ndef dailyStatistics(type):\n    if type == 0:\n        #return stats for in need\n        return babyFoodHandler().getAllFood()\n    elif type == 1 :\n        #return sta\n        # ts for available\n        return babyFoodHandler().getAllFood()\n    else :\n        #return stats for match\n        return babyFoodHandler().getAllFood()\n\n@app.route('/almacenespr/dashboard/statistics/weekly/<int:type>', methods = ['GET'])\ndef weeklyStatistics(type):\n    if type == 0:\n        #return stats for in need\n        return babyFoodHandler().getAllFood()\n    elif type == 1 :\n        #return stats for available\n        return babyFoodHandler().getAllFood()\n    else :\n        #return stats for match\n        return babyFoodHandler().getAllFood()\n@app.route('/almacenespr/dashboard/statistics/region/<int:type>', methods = ['GET'])\ndef regionStatistics(type):\n    if type == 0:\n        #return stats for in need\n        return babyFoodHandler().getAllFood()\n    elif type == 1 :\n        #return stats for available\n        return babyFoodHandler().getAllFood()\n    else :\n        #return stats for match\n        return babyFoodHandler().getAllFood()\n\nif __name__ == '__main__':\n     app.run()\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- main.py	(revision 22849966f4f82ee381651b56c17f4cb27907ae69)
+++ main.py	(date 1588643742610)
@@ -118,7 +118,11 @@
     if request.method == 'GET':
         return SupplierHandler().getAllSuppliers()
 
-
+@app.route('/almacenespr/resourcesrequested/<int:request_id>', methods = ['GET'])
+def getAllResourcesRequested(request_id):
+    if request.method == 'GET':
+        print(request_id)
+        return ResourceHandler().getResourceInRequest(request_id)
 
 @app.route('/almacenespr/consumer/<int:consumer_id>/orders', methods = ['GET','POST','PUT'])
 def orderResources(consumer_id):
@@ -149,7 +153,7 @@
 
 @app.route('/almacenespr/requested', methods = ['GET'])
 def viewRequested():
-    return RequestHandler().getAllRequestsAll()
+    return RequestHandler().getAllRequests()
 
 @app.route('/almacenespr/requested/<string:keyword>', methods = ['GET'])
 def viewRequestedByKeyword(keyword):
